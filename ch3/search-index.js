var searchIndex = new Map(JSON.parse('[\
["os",{"doc":"The main module and entrypoint","t":"JFNCNNCCNCNCENHCCCHQQCCCCNNNSSSSSSSSSFNNNNHNNNNFKIFFOMNNNNNNNOOMNNNOONHHHHNNNNHNNNMNNOOONNNNNNNNNJHHHEJFJFNNNNNNNNOOEEENNHHHNNNNHNNNNNNNNFNNNNNHNNHNNNNECFNNNNONNNNNSSSSCCHSHHHHFFFONNNNNNNONHNNNNONNNHNHNOHNHNHCHONNNNNNNNNPPPFGPNNNNNNNNNNNOONNNNNNNSSHH","n":["HEAP_ALLOCATOR","PageAllocImpl","alloc","board","borrow","borrow_mut","config","console","dealloc","frame_allocater","from","heap_allocator","init_heap","into","kernel_interrupt","lang_items","loader","logging","main","print","println","sync","syscall","task","timer","try_from","try_into","type_id","CLOCK_FREQ","APP_BASE_ADDRESS","APP_SIZE_LIMIT","CLOCK_FREQ","KERNEL_HEAP_SIZE","KERNEL_STACK_SIZE","MAX_APP_NUM","PAGE_SIZE","USER_STACK_SIZE","Stdout","borrow","borrow_mut","from","into","print","try_from","try_into","type_id","write_str","FRAME_ALLOCATOR","FrameAllocator","FrameAllocatorImpl","FrameTracker","StackFrameAllocator","__private_field","alloc","alloc","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","current","current","dealloc","dealloc","deref","drop","end","end","fmt","frame_alloc","frame_alloc_persist","frame_allocator_test","frame_dealloc","from","from","from","init","init_frame_allocator","into","into","into","new","new","new","ppn","recycled","recycled","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","HEAP_SPACE","handle_alloc_error","init_heap","panic","FrameTracker","KERNEL_STACK","KernelStack","USER_STACK","UserStack","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","data","data","frame_alloc","frame_alloc_persist","frame_dealloc","from","from","get_base_i","get_ksp","get_num_app","get_sp","get_sp","into","into","load_apps","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Logger","borrow","borrow_mut","enabled","flush","from","init","into","log","puts","try_from","try_into","type_id","write_str","UPSafeCell","up","UPSafeCell","borrow","borrow_mut","exclusive_access","from","inner","into","new","try_from","try_into","type_id","SYSCALL_EXIT","SYSCALL_GET_TIME","SYSCALL_WRITE","SYSCALL_YIELD","fs","process","syscall","FD_STDOUT","sys_write","sys_exit","sys_get_time","sys_yield","TASK_MANAGER","TaskManager","TaskManagerInner","__private_field","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","current_task","current_task","deref","exit_current_and_run_next","find_next_task","from","from","from","inner","into","into","into","mark_current_exited","mark_current_exited","mark_current_suspended","mark_current_suspended","num_app","run_first_task","run_first_task","run_next_task","run_next_task","suspend_current_and_run_next","task","task_entry","tasks","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Exited","Ready","Running","TaskControlBlock","TaskStatus","UnInit","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","eq","from","from","into","into","task_cx","task_status","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","MSEC_PER_SEC","TICKS_PER_SEC","get_time","get_time_ms"],"q":[[0,"os"],[28,"os::board"],[29,"os::config"],[37,"os::console"],[47,"os::frame_allocater"],[97,"os::heap_allocator"],[100,"os::lang_items"],[101,"os::loader"],[137,"os::logging"],[151,"os::sync"],[153,"os::sync::up"],[164,"os::syscall"],[171,"os::syscall::fs"],[173,"os::syscall::process"],[176,"os::task"],[220,"os::task::task"],[246,"os::timer"],[250,"polyhal::addr"],[251,"polyhal::currrent_arch::context"],[252,"polyhal"],[253,"core::result"],[254,"core::any"],[255,"core::fmt"],[256,"core::fmt"],[257,"core::fmt"],[258,"core::panic::panic_info"],[259,"log"],[260,"log"]],"d":["","","","Constants used in rCore for qemu","","","Constants used in rCore","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","kernel interrupt","","Loading user applications into memory","","the rust entry-point of os","print string macro","println string macro","Synchronization and interior mutability primitives","Implementation of syscalls","Task management implementation","RISC-V timer-related functionality","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Get base address of app i.","","Get the total number of applications.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Load nth user app at [APP_BASE_ADDRESS + n * …","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","Uniprocessor interior mutability primitives","Wrap a static data structure inside it so that we are able …","","","Exclusive access inner data in UPSafeCell. Panic if the …","Returns the argument unchanged.","inner data","Calls <code>U::from(self)</code>.","User is responsible to guarantee that inner struct is only …","","","","","","","","File and filesystem-related syscalls","Process management syscalls","handle syscall exception with <code>syscall_id</code> and other …","","write buf of length <code>len</code>  to a file with <code>fd</code>","task exits and submit an exit code","get time in milliseconds","current task gives up resources for other tasks","Global variable: TASK_MANAGER","The task manager, where all the tasks are managed.","Inner of Task Manager","","","","","","","","","id of current <code>Running</code> task","","exit current task,  then run next task","Find next task to run and return task id.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","use inner value to get mutable access","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","exit current task","Change the status of current <code>Running</code> task into <code>Exited</code>.","suspend current task","Change the status of current <code>Running</code> task into <code>Ready</code>.","total number of tasks","run first task","Run the first task in task list.","rust next task","Switch current <code>Running</code> task to the task we have found, or …","suspend current task, then run next task","Types related to task management","","task list","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","read the <code>mtime</code> register","get current time in milliseconds"],"i":[0,0,1,0,1,1,0,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,10,10,10,10,0,10,10,10,10,0,0,0,0,0,16,13,15,18,15,16,18,15,16,15,38,13,15,16,18,15,38,18,0,0,0,0,18,15,16,15,0,18,15,16,13,18,15,18,15,38,18,15,16,18,15,16,18,15,16,0,0,0,0,0,0,0,0,0,23,24,23,24,23,24,23,24,23,24,0,0,0,23,24,0,0,0,23,24,23,24,0,23,24,23,24,23,24,23,24,0,25,25,25,25,25,0,25,25,0,25,25,25,25,0,0,0,17,17,17,17,17,17,17,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,35,39,36,35,39,36,35,39,36,0,35,35,39,36,35,35,39,36,0,35,0,35,35,0,35,0,35,0,0,0,39,35,39,36,35,39,36,35,39,36,37,37,37,0,0,37,40,37,40,37,37,37,37,40,37,40,37,40,40,37,40,37,40,37,40,37,0,0,0,0],"f":"``{bd}`{ce{}{}}0``{{bd}f}`{cc{}}``2{{hj}f}```{lf}``````{c{{n{e}}}{}{}}0{cA`{}}``````````6646{Abf}221{{AdAf}Ah}``````{Aj{{Al{d}}}}{An{{Al{d}}}}::::::``{{Ajd}f}{{And}f}{B`{{Bb{An}}}}{Bdf}``{{BdBf}Ah}{{}{{Al{Bd}}}}{{}{{Al{d}}}}{{}f}{df}{cc{}}00{{Andd}f}{{ll}f}{ce{}{}}00{{}Aj}{dBd}{{}An}```{c{{n{e}}}{}{}}00000{cA`{}}00`{BhBj};{BlBj}`````7777{BnBn}{C`C`}{{ce}f{}{}}0`````=={ll}0{{}l}{Bnl}{C`l}>>{{}f}??;;;;::`??{{CbCd}Cf}{Cbf}{cc{}}{{{Al{Af}}}f}{ce{}{}}{{CbCh}f}{{{Cl{Cj}}}f}{c{{n{e}}}{}{}}0{cA`{}}{{CbAf}Ah}```55{{{Bb{c}}}{{Cn{c}}}{}}8`6{c{{Bb{c}}}{}}443``````{{l{D`{l}}}Db}`{{lCjl}Db}{DdBj}{{}Db}0````;;;;;;{Dfl}`{DhDf}{{}f}{Df{{Al{l}}}}{cc{}}00`{ce{}{}}003{Dff}40`4{DfBj}515`5`{c{{n{e}}}{}{}}00000{cA`{}}00``````4444{DjDj}{{ce}f{}{}}{{DjDj}Cf}8877``7444433``{{}l}0","c":[],"p":[[5,"PageAllocImpl",0],[5,"PhysPage",250],[1,"unit"],[5,"TrapFrame",251],[6,"TrapType",252],[1,"usize"],[6,"Result",253],[5,"TypeId",254],[5,"Arguments",255],[5,"Stdout",37],[1,"str"],[8,"Result",255],[10,"FrameAllocator",47],[6,"Option",256],[5,"StackFrameAllocator",47],[5,"FRAME_ALLOCATOR",47],[5,"UPSafeCell",153],[5,"FrameTracker",47],[5,"Formatter",255],[5,"Layout",257],[1,"never"],[5,"PanicInfo",258],[5,"KernelStack",101],[5,"UserStack",101],[5,"Logger",137],[5,"Metadata",259],[1,"bool"],[5,"Record",259],[1,"u8"],[1,"slice"],[5,"RefMut",260],[1,"array"],[1,"isize"],[1,"i32"],[5,"TaskManager",176],[5,"TASK_MANAGER",176],[6,"TaskStatus",220],[8,"FrameAllocatorImpl",47],[5,"TaskManagerInner",176],[5,"TaskControlBlock",220]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
